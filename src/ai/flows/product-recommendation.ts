// This is an autogenerated file from Firebase Studio.

'use server';

/**
 * @fileOverview This file defines a Genkit flow for providing product recommendations based on user browsing history and stated interests.
 *
 * @function productRecommendation - The main function that takes user interests and browsing history as input and returns a list of recommended products.
 * @interface ProductRecommendationInput - The input type for the productRecommendation function, including user interests and browsing history.
 * @interface ProductRecommendationOutput - The output type for the productRecommendation function, which is a list of recommended product names.
 */

import {ai} from '@/ai/genkit';
import {z} from 'genkit';

// Input schema for the product recommendation flow
const ProductRecommendationInputSchema = z.object({
  interests: z.string().describe('The stated interests of the customer'),
  browsingHistory: z.string().describe('The recent browsing history of the customer on the website'),
});

export type ProductRecommendationInput = z.infer<typeof ProductRecommendationInputSchema>;

// Output schema for the product recommendation flow
const ProductRecommendationOutputSchema = z.object({
  recommendedProducts: z.array(
    z.string().describe('Name of the recommended product')
  ).describe('A list of recommended products based on the customer input.'),
});

export type ProductRecommendationOutput = z.infer<typeof ProductRecommendationOutputSchema>;

/**
 * Recommends relevant products based on customer interests and browsing history.
 * @param input - An object containing the customer's interests and browsing history.
 * @returns A promise that resolves to an object containing a list of recommended product names.
 */
export async function productRecommendation(input: ProductRecommendationInput): Promise<ProductRecommendationOutput> {
  return productRecommendationFlow(input);
}


const productRecommendationPrompt = ai.definePrompt({
  name: 'productRecommendationPrompt',
  input: {
    schema: ProductRecommendationInputSchema,
  },
  output: {
    schema: ProductRecommendationOutputSchema,
  },
  prompt: `You are an AI sales assistant for Impela Trading CC, a retailer of high-quality leather products.
  Based on the customer's expressed interests and recent browsing history, recommend products that the customer is likely to purchase.

  Interests: {{{interests}}}
  Browsing History: {{{browsingHistory}}}

  Return a list of product names that are most relevant to the customer.
  `,
});


const productRecommendationFlow = ai.defineFlow(
  {
    name: 'productRecommendationFlow',
    inputSchema: ProductRecommendationInputSchema,
    outputSchema: ProductRecommendationOutputSchema,
  },
  async input => {
    const {output} = await productRecommendationPrompt(input);
    return output!;
  }
);
